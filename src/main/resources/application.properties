# Server port, fallback to 8080
spring.server.port = ${PORT:8080}

# DB connect info
spring.datasource.url=jdbc:mysql://${DB_ENDPOINT}:${DB_PORT}/justtranscribeit
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}

# AWS bucket info
amazonProperties.endpointUrl=${AWS_ENDPOINT}
amazonProperties.accessKey=${AWS_KEY_ID}
amazonProperties.secretKey=${AWS_KEY_PW}
amazonProperties.bucketName=${AWS_BUCKET}

# URL Root
my.urlRoot=${URL_ROOT}

# Monthly server time limit (seconds)
my.usageLimitMonthly=600

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# Prevent templates from requiring xml-compliant syntax
spring.thymeleaf.mode = HTML

# Set file size limits
spring.servlet.multipart.max-file-size=15MB
spring.servlet.multipart.max-request-size=15MB

#
spring.http.multipart.max-file-size=15MB
spring.http.multipart.max-request-size=15MB

# Enable forms to submit put/delete requests
spring.mvc.hiddenmethod.filter.enabled=true